#status = error
#dest = err
#name = PropertiesConfig
#
#property.filename = /home/artemy/testJavaLogger.log
#
#filter.threshold.type = ThresholdFilter
#filter.threshold.level = info
#
#appender = my
#appender.my.name = gui.MyCustomAppenderImpl
#appender.my.level = INFO
#
#appender.console.type = Console
#appender.console.name = LogAppender
#appender.console.layout.type = PatternLayout
#appender.console.layout.pattern = %m%n
#appender.console.filter.threshold.type = ThresholdFilter
#appender.console.filter.threshold.level = info
#
##appender.console.type = Console
##appender.console.name = STDOUT
##appender.console.layout.type = PatternLayout
##appender.console.layout.pattern = %m%n
##appender.console.filter.threshold.type = ThresholdFilter
##appender.console.filter.threshold.level = info
#
#appender.rolling.type = RollingFile
#appender.rolling.name = RollingFile
#appender.rolling.fileName = ${filename}
#appender.rolling.filePattern = target/rolling2/test1-%d{MM-dd-yy-HH-mm-ss}-%i.log.gz
#appender.rolling.layout.type = PatternLayout
#appender.rolling.layout.pattern = %d %p %C{1.} [%t] %m%n
#appender.rolling.policies.type = Policies
#appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
#appender.rolling.policies.time.interval = 2
#appender.rolling.policies.time.modulate = true
#appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
#appender.rolling.policies.size.size=100MB
#appender.rolling.strategy.type = DefaultRolloverStrategy
#appender.rolling.strategy.max = 5
#
#logger.rolling.name = Main
#logger.rolling.level = info
#logger.rolling.appenderRef.rolling.ref = RollingFile
#
#rootLogger.level = info
##rootLogger.appenderRef.stdout.ref = STDOUT
#rootLogger.appenderRef.stdout.ref = my
##rootLogger.appenderRef.ref = LogAppender
#
#
#

#
## this packages attribute is important, please put comma seperated package(s) to the
## plugin(s) you have created
#packages = gui.MyCustomAppenderImpl
#
## Example: Declare and Define OOTB Console appender, which sends log events to stdout
#appender.console.name = stdout
#appender.console.type = Console
#
## Declare and define the custom appender like this
## Note that the "abc" in "appender.abc.type" can be anything
## and the value for "appender.abc.type" should be the same as
## "Name" attribute value given in custom appender plugin which is "MyCustomAppender"
#appender.abc.name=arbitrary_name
#appender.abc.type=MyCustomAppender
#
#rootLogger.appenderRef.stdout.ref = stdout
#rootLogger.appenderRef.abc.ref = arbitrary_name
#
#logger.loggeridentifier.name = Main
#logger.loggeridentifier.appenderRef.stdout.ref = stdout
#logger.loggeridentifier.appenderRef.abc.ref = arbitrary_name



# this packages attribute is important, please put comma seperated package(s) to the
# plugin(s) you have created
packages = gui

# Example: Declare and Define OOTB Console appender, which sends log events to stdout
appender.console.name = stdout
appender.console.type = Console

# Declare and define the custom appender like this
# Note that the "abc" in "appender.abc.type" can be anything
# and the value for "appender.abc.type" should be the same as
# "Name" attribute value given in custom appender plugin which is "MyCustomAppender"
appender.abc.name=arbitrary_name
appender.abc.type=MyCustomAppender

rootLogger.appenderRef.stdout.ref = stdout
rootLogger.appenderRef.abc.ref = arbitrary_name

logger.loggeridentifier.name = Main
logger.loggeridentifier.appenderRef.stdout.ref = stdout
logger.loggeridentifier.appenderRef.abc.ref = arbitrary_name

# Also note that the value of appenderRef should be the same name given to your
# appender in properties file, which in this case is "arbitrary_name" (as given above)

# Also note that the value of appenderRef should be the same name given to your
# appender in properties file, which in this case is "arbitrary_name" (as given above)